package com.mast.readup.entities;

import com.fasterxml.jackson.core.type.TypeReference;
import com.fasterxml.jackson.databind.ObjectMapper;
import jakarta.persistence.Column;
import jakarta.persistence.Entity;
import jakarta.persistence.FetchType;
import jakarta.persistence.GeneratedValue;
import jakarta.persistence.GenerationType;
import jakarta.persistence.Id;
import jakarta.persistence.JoinColumn;
import jakarta.persistence.ManyToOne;
import jakarta.persistence.Table;
import jakarta.validation.constraints.NotNull;
import lombok.AllArgsConstructor;
import lombok.Data;
import lombok.EqualsAndHashCode;
import lombok.NoArgsConstructor;
import java.time.LocalDate;
import java.util.List;

/**
 * This class represents the "sfida" (challenge) entity in the database.
 * It uses Lombok to reduce boilerplate code and JPA annotations for ORM
 * mapping.
 */

@Entity
@Table(name = "sfida")
@Data
@NoArgsConstructor // Lombok: Generates a no-argument constructor (required by JPA)
@AllArgsConstructor // Lombok: Generates a constructor with all fields
@EqualsAndHashCode(onlyExplicitlyIncluded = true) // Lombok: Limits equality to specified fields
public class Sfida implements JsonStringListConverter {

    private static final ObjectMapper objectMapper = new ObjectMapper();

    // Primary key class Sfida, auto-generated by the database
    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    @Column(name = "codice_sfida")
    private long codiceSfida;

    // Challenge name
    @Column(name = "nome_sfida", length = 80, nullable = true)
    private String nomeSfida;

    // Challenge description
    @Column(name = "descrizione_sfida", length = 500, nullable = true)
    private String descrizioneSfida;

    // Number of challenge participants, required field
    @Column(name = "num_partecipanti", nullable = false)
    @NotNull
    private int numPartecipanti;

    // Creator of the challenge
    @ManyToOne(fetch = FetchType.LAZY) // fetch = FetchType.LAZY Ã¨ consigliato per relazioni ManyToOne
    @JoinColumn(name = "id_utente_creatore", nullable = false) // La colonna della FK nel DB
    @NotNull // L'utente creatore dovrebbe essere sempre presente
    private Utente utenteCreatore;

    // Start date of the challenge
    @Column(name = "data_inizio", nullable = false)
    @NotNull
    private LocalDate dataInizio;

    // End date of the challenge
    @Column(name = "data_fine", nullable = true)
    private LocalDate dataFine;

    @Column(name = "nome_partecipanti", columnDefinition = "json", nullable = true)
    private List<String> nomePartecipanti;

    @Override
    public String convertToDatabaseColumn(List<String> attribute) {
        try {
            return objectMapper.writeValueAsString(attribute);
        } catch (Exception e) {
            throw new RuntimeException("Errore nella conversione della lista in JSON", e);
        }
    }

    @Override
    public List<String> convertToEntityAttribute(String dbData) {
        try {
            return objectMapper.readValue(dbData, new TypeReference<List<String>>() {
            });
        } catch (Exception e) {
            throw new RuntimeException("Errore nella conversione del JSON in lista", e);
        }
    }
}